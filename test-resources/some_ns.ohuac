ns some_ns;

use sf ohua::math (add, isZero);
use algo some::module (a);

fn square (x : int) -> int{
    add(x, x)
}

fn algo1 (someParam : HashMap<Key, Val>, coll : List<A>) -> Bool {
    let a = square(someParam);

    let coll0 = for i in coll {
        square(i)
    };

    if (isZero(a)) {
        coll0
    } else {
        a
    }

}

fn main (param : HashMap<Key, Value<NestedType>>) {
    algo1(param, param)
}
